{"ast":null,"code":"/** @format */\nimport { createSelector } from 'reselect';\n\nconst getCart = state => {\n  return state.cart;\n};\n\nexport const isHidden = createSelector([getCart], cart => cart.isHidden);\nexport const getShopItems = createSelector([getCart], cart => cart.shopItems);\nexport const getItemsCount = createSelector([getShopItems], shopItems => shopItems.reduce((acc, item) => acc + item.quantity, 0));\nexport const getGrandTotal = createSelector([getShopItems], shopItems => shopItems.reduce((acc, item) => acc + item.quantity * item.price, 0));","map":{"version":3,"sources":["C:/Users/admin/Desktop/crown-with TypeScript/crown/src/redux/cart/cart.reselector.js"],"names":["createSelector","getCart","state","cart","isHidden","getShopItems","shopItems","getItemsCount","reduce","acc","item","quantity","getGrandTotal","price"],"mappings":"AAAA;AAEA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAC1B,SAAOA,KAAK,CAACC,IAAb;AACA,CAFD;;AAIA,OAAO,MAAMC,QAAQ,GAAGJ,cAAc,CAAC,CAACC,OAAD,CAAD,EAAaE,IAAD,IAAUA,IAAI,CAACC,QAA3B,CAA/B;AAEP,OAAO,MAAMC,YAAY,GAAGL,cAAc,CACzC,CAACC,OAAD,CADyC,EAGxCE,IAAD,IAAUA,IAAI,CAACG,SAH0B,CAAnC;AAMP,OAAO,MAAMC,aAAa,GAAGP,cAAc,CAC1C,CAACK,YAAD,CAD0C,EAGzCC,SAAD,IAAeA,SAAS,CAACE,MAAV,CAAiB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACC,QAA3C,EAAqD,CAArD,CAH2B,CAApC;AAMP,OAAO,MAAMC,aAAa,GAAGZ,cAAc,CAAC,CAACK,YAAD,CAAD,EAAkBC,SAAD,IAC3DA,SAAS,CAACE,MAAV,CAAiB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACC,QAAL,GAAgBD,IAAI,CAACG,KAA3D,EAAkE,CAAlE,CAD0C,CAApC","sourcesContent":["/** @format */\r\n\r\nimport { createSelector } from 'reselect';\r\n\r\nconst getCart = (state) => {\r\n\treturn state.cart;\r\n};\r\n\r\nexport const isHidden = createSelector([getCart], (cart) => cart.isHidden);\r\n\r\nexport const getShopItems = createSelector(\r\n\t[getCart],\r\n\r\n\t(cart) => cart.shopItems,\r\n);\r\n\r\nexport const getItemsCount = createSelector(\r\n\t[getShopItems],\r\n\r\n\t(shopItems) => shopItems.reduce((acc, item) => acc + item.quantity, 0),\r\n);\r\n\r\nexport const getGrandTotal = createSelector([getShopItems], (shopItems) =>\r\n\tshopItems.reduce((acc, item) => acc + item.quantity * item.price, 0),\r\n);\r\n"]},"metadata":{},"sourceType":"module"}