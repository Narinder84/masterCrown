{"ast":null,"code":"/** @format */\nimport { put, takeLatest, call, all } from 'redux-saga/effects';\nimport { createDataBaseForUser } from '../../firabase/fireBaseUtils';\nimport userActionsTypes from './user.action.types';\nimport { googleSignIn, googleSignInFails, googleSignInSuccess } from './user.action';\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield call(googleSignIn);\n    const userRef = yield call(createDataBaseForUser(user));\n  } catch (error) {}\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/master/crown-master/client/src/redux/user/user.sagas.js"],"names":["put","takeLatest","call","all","createDataBaseForUser","userActionsTypes","googleSignIn","googleSignInFails","googleSignInSuccess","signInWithGoogle","user","userRef","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA;AAEA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SACCC,YADD,EAECC,iBAFD,EAGCC,mBAHD,QAIO,eAJP;;AAMA,UAAUC,gBAAV,GAA6B;AAC5B,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACI,YAAD,CAA3B;AACA,UAAMK,OAAO,GAAG,MAAMT,IAAI,CAACE,qBAAqB,CAACM,IAAD,CAAtB,CAA1B;AACA,GAHD,CAGE,OAAOE,KAAP,EAAc,CAAE;AAClB;;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMZ,UAAU,CAACI,gBAAgB,CAACS,oBAAlB,EAAwCL,gBAAxC,CAAhB;AACA;AAED,OAAO,UAAUM,SAAV,GAAsB;AAC5B,QAAMZ,GAAG,CAAC,CAACD,IAAI,CAACW,mBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["/** @format */\r\n\r\nimport { put, takeLatest, call, all } from 'redux-saga/effects';\r\nimport { createDataBaseForUser } from '../../firabase/fireBaseUtils';\r\nimport userActionsTypes from './user.action.types';\r\nimport {\r\n\tgoogleSignIn,\r\n\tgoogleSignInFails,\r\n\tgoogleSignInSuccess,\r\n} from './user.action';\r\n\r\nfunction* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst { user } = yield call(googleSignIn);\r\n\t\tconst userRef = yield call(createDataBaseForUser(user));\r\n\t} catch (error) {}\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}