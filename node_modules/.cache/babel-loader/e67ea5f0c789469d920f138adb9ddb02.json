{"ast":null,"code":"/** @format */\nimport { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root.reducer';\nimport rootSaga from './root.sagas';\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware, logger]; // if (process.env.NODE_ENV === 'development') {\n// \tmiddleware.push(logger);\n// }\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/admin/Desktop/Projects-with TypeScript/crown/src/redux/store.ts"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middleware","store","run","persistor"],"mappings":"AAAA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,QAAP,MAAqB,cAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,UAAU,GAAG,CAACD,cAAD,EAAiBJ,MAAjB,CAAnB,C,CAEA;AACA;AACA;;AAEA,OAAO,MAAMM,KAAK,GAAGT,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,UAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACG,GAAf,CAAmBJ,QAAnB;AAEA,OAAO,MAAMK,SAAS,GAAGT,YAAY,CAACO,KAAD,CAA9B","sourcesContent":["/** @format */\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport thunks from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './root.reducer';\r\n\r\nimport rootSaga from './root.sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middleware = [sagaMiddleware, logger];\r\n\r\n// if (process.env.NODE_ENV === 'development') {\r\n// \tmiddleware.push(logger);\r\n// }\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}