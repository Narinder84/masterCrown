{"ast":null,"code":"/** @format */\nimport { put, takeLatest, call, all } from 'redux-saga/effects';\nimport { googleSignIn, createDataBaseForUser } from '../../firabase/fireBaseUtils';\nimport userActionsTypes from './user.action.types';\nimport { googleSignInFails, googleSignInSuccess } from './user.action';\nimport { fetchCollectionsAsync } from '../collections/collections.actions';\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield call(googleSignIn);\n    yield call(createDataBaseForUser, user);\n    yield call(console.log('ok'));\n  } catch (error) {}\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/master/crown-master/client/src/redux/user/user.sagas.js"],"names":["put","takeLatest","call","all","googleSignIn","createDataBaseForUser","userActionsTypes","googleSignInFails","googleSignInSuccess","fetchCollectionsAsync","signInWithGoogle","user","console","log","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA;AAEA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACCC,YADD,EAECC,qBAFD,QAGO,8BAHP;AAIA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,eAAvD;AACA,SAASC,qBAAT,QAAsC,oCAAtC;;AAEA,UAAUC,gBAAV,GAA6B;AAC5B,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACE,YAAD,CAA3B;AACA,UAAMF,IAAI,CAACG,qBAAD,EAAwBM,IAAxB,CAAV;AACA,UAAMT,IAAI,CAACU,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAD,CAAV;AACA,GAJD,CAIE,OAAOC,KAAP,EAAc,CAAE;AAClB;;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMd,UAAU,CAACK,gBAAgB,CAACU,oBAAlB,EAAwCN,gBAAxC,CAAhB;AACA;AAED,OAAO,UAAUO,SAAV,GAAsB;AAC5B,QAAMd,GAAG,CAAC,CAACD,IAAI,CAACa,mBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["/** @format */\r\n\r\nimport { put, takeLatest, call, all } from 'redux-saga/effects';\r\nimport {\r\n\tgoogleSignIn,\r\n\tcreateDataBaseForUser,\r\n} from '../../firabase/fireBaseUtils';\r\nimport userActionsTypes from './user.action.types';\r\nimport { googleSignInFails, googleSignInSuccess } from './user.action';\r\nimport { fetchCollectionsAsync } from '../collections/collections.actions';\r\n\r\nfunction* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst { user } = yield call(googleSignIn);\r\n\t\tyield call(createDataBaseForUser, user);\r\n\t\tyield call(console.log('ok'));\r\n\t} catch (error) {}\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}