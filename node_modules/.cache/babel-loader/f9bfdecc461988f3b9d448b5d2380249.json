{"ast":null,"code":"/** @format */\nimport { put, takeLatest, call, all } from 'redux-saga/effects';\nimport { getCurrentUser, googleSignIn, createDataBaseForUser } from '../../firabase/fireBaseUtils';\nimport userActionsTypes from './user.action.types';\nimport { googleSignInFails, googleSignInSuccess } from './user.action';\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield call(googleSignIn);\n    const userRef = yield call(createDataBaseForUser, user);\n    const userSnaphot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnaphot.id,\n      ...userSnaphot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFails(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n  } catch (error) {}\n}\n\nexport function* onUserCheck() {\n  yield takeLatest(userActionsTypes.CHECK_USER, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/master/crown-master/client/src/redux/user/user.sagas.js"],"names":["put","takeLatest","call","all","getCurrentUser","googleSignIn","createDataBaseForUser","userActionsTypes","googleSignInFails","googleSignInSuccess","signInWithGoogle","user","userRef","userSnaphot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","isUserAuthenticated","userAuth","onUserCheck","CHECK_USER","userSagas"],"mappings":"AAAA;AAEA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACCC,cADD,EAECC,YAFD,EAGCC,qBAHD,QAIO,8BAJP;AAKA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,eAAvD;;AAEA,UAAUC,gBAAV,GAA6B;AAC5B,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACG,YAAD,CAA3B;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,qBAAD,EAAwBK,IAAxB,CAA1B;AACA,UAAME,WAAW,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA1B;AACA,UAAMd,GAAG,CACRS,mBAAmB,CAAC;AAAEM,MAAAA,EAAE,EAAEF,WAAW,CAACE,EAAlB;AAAsB,SAAGF,WAAW,CAACG,IAAZ;AAAzB,KAAD,CADX,CAAT;AAGA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACf,UAAMjB,GAAG,CAACQ,iBAAiB,CAACS,KAAD,CAAlB,CAAT;AACA;AACD;;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMjB,UAAU,CAACM,gBAAgB,CAACY,oBAAlB,EAAwCT,gBAAxC,CAAhB;AACA;;AAED,UAAUU,mBAAV,GAAgC;AAC/B,MAAI;AACH,UAAMC,QAAQ,GAAG,MAAMjB,cAAc,EAArC;AACA,QAAI,CAACiB,QAAL,EAAe;AACf,GAHD,CAGE,OAAOJ,KAAP,EAAc,CAAE;AAClB;;AAED,OAAO,UAAUK,WAAV,GAAwB;AAC9B,QAAMrB,UAAU,CAACM,gBAAgB,CAACgB,UAAlB,EAA8BH,mBAA9B,CAAhB;AACA;AAED,OAAO,UAAUI,SAAV,GAAsB;AAC5B,QAAMrB,GAAG,CAAC,CAACD,IAAI,CAACgB,mBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["/** @format */\r\n\r\nimport { put, takeLatest, call, all } from 'redux-saga/effects';\r\nimport {\r\n\tgetCurrentUser,\r\n\tgoogleSignIn,\r\n\tcreateDataBaseForUser,\r\n} from '../../firabase/fireBaseUtils';\r\nimport userActionsTypes from './user.action.types';\r\nimport { googleSignInFails, googleSignInSuccess } from './user.action';\r\n\r\nfunction* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst { user } = yield call(googleSignIn);\r\n\t\tconst userRef = yield call(createDataBaseForUser, user);\r\n\t\tconst userSnaphot = yield userRef.get();\r\n\t\tyield put(\r\n\t\t\tgoogleSignInSuccess({ id: userSnaphot.id, ...userSnaphot.data() }),\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tyield put(googleSignInFails(error));\r\n\t}\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nfunction* isUserAuthenticated() {\r\n\ttry {\r\n\t\tconst userAuth = yield getCurrentUser();\r\n\t\tif (!userAuth) return;\r\n\t} catch (error) {}\r\n}\r\n\r\nexport function* onUserCheck() {\r\n\tyield takeLatest(userActionsTypes.CHECK_USER, isUserAuthenticated);\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}