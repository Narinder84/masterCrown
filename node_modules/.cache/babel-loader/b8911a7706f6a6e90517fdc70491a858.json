{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\master\\\\crown-master\\\\src\\\\App.jsx\";\n\n/** @format */\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from '../src/redux/user/user.action';\nimport { auth, createDataBaseForUser, createDataBase } from '././firabase/fireBaseUtils';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/directory/HomePage.page';\nimport ShopPage from './pages/shopPage/shopPage';\nimport SignIn from './pages/signIn/signIn';\nimport './App.css';\nimport Register from './pages/register/register';\nimport CheckOut from './pages/checkOut/checkOut'; // import SHOP_DATA from '../src/redux/collections/shop.data.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSignOut = () => {\n      auth.signOut().then(() => this.setState({\n        currentUser: ''\n      }));\n    };\n\n    this.subscribeGoogleAuth = null;\n    this.state = {\n      currentUser: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.subscribeGoogleAuth = auth.onAuthStateChanged(async user => {\n      if (user && user.displayName !== null) {\n        console.log('mount');\n        const userRef = await createDataBaseForUser(user); // userRef.get().then((doc) => {\n        // \tconsole.log('this');\n        // \tthis.setState({ currentUser: doc.data() });\n        // });\n\n        userRef.get().then(doc => this.props.getCurrentUser(doc.data()));\n      }\n    }); // this function for one time use , to create fresh data base in fire store\n    // createDataBase(SHOP_DATA);\n  }\n\n  componentWillUnmount() {\n    this.subscribeGoogleAuth = null;\n  }\n\n  componentDidUpdate() {\n    this.subscribeGoogleAuth = auth.onAuthStateChanged(async user => {\n      if (user && user.displayName !== null) {\n        console.log('mount');\n        const userRef = await createDataBaseForUser(user); // userRef.get().then((doc) => {\n        // \tconsole.log('this');\n        // \tthis.setState({ currentUser: doc.data() });\n        // });\n\n        userRef.get().then(doc => this.props.getCurrentUser(doc.data()));\n      }\n    });\n  }\n\n  render() {\n    console.log(this.props.currentUser);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      handleSignOut: this.handleSignOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signIn\",\n      render: () => this.state.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(SignIn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 55\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      render: () => this.state.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(Register, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 55\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/checkOut\",\n      component: CheckOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentUser: currentUser => dispatch(getCurrentUser(currentUser))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/admin/Desktop/master/crown-master/src/App.jsx"],"names":["React","Redirect","Route","Switch","connect","getCurrentUser","auth","createDataBaseForUser","createDataBase","Header","HomePage","ShopPage","SignIn","Register","CheckOut","App","Component","constructor","props","handleSignOut","signOut","then","setState","currentUser","subscribeGoogleAuth","state","componentDidMount","onAuthStateChanged","user","displayName","console","log","userRef","get","doc","data","componentWillUnmount","componentDidUpdate","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { getCurrentUser } from '../src/redux/user/user.action';\nimport {\n\tauth,\n\tcreateDataBaseForUser,\n\tcreateDataBase,\n} from '././firabase/fireBaseUtils';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/directory/HomePage.page';\nimport ShopPage from './pages/shopPage/shopPage';\nimport SignIn from './pages/signIn/signIn';\nimport './App.css';\nimport Register from './pages/register/register';\nimport CheckOut from './pages/checkOut/checkOut';\n\n// import SHOP_DATA from '../src/redux/collections/shop.data.js';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrentUser: '',\n\t\t};\n\t}\n\n\thandleSignOut = () => {\n\t\tauth.signOut().then(() => this.setState({ currentUser: '' }));\n\t};\n\n\tsubscribeGoogleAuth = null;\n\n\tasync componentDidMount() {\n\t\tthis.subscribeGoogleAuth = auth.onAuthStateChanged(async (user) => {\n\t\t\tif (user && user.displayName !== null) {\n\t\t\t\tconsole.log('mount');\n\t\t\t\tconst userRef = await createDataBaseForUser(user);\n\n\t\t\t\t// userRef.get().then((doc) => {\n\t\t\t\t// \tconsole.log('this');\n\t\t\t\t// \tthis.setState({ currentUser: doc.data() });\n\t\t\t\t// });\n\t\t\t\tuserRef.get().then((doc) => this.props.getCurrentUser(doc.data()));\n\t\t\t}\n\t\t});\n\t\t// this function for one time use , to create fresh data base in fire store\n\t\t// createDataBase(SHOP_DATA);\n\t}\n\tcomponentWillUnmount() {\n\t\tthis.subscribeGoogleAuth = null;\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.subscribeGoogleAuth = auth.onAuthStateChanged(async (user) => {\n\t\t\tif (user && user.displayName !== null) {\n\t\t\t\tconsole.log('mount');\n\t\t\t\tconst userRef = await createDataBaseForUser(user);\n\n\t\t\t\t// userRef.get().then((doc) => {\n\t\t\t\t// \tconsole.log('this');\n\t\t\t\t// \tthis.setState({ currentUser: doc.data() });\n\t\t\t\t// });\n\t\t\t\tuserRef.get().then((doc) => this.props.getCurrentUser(doc.data()));\n\t\t\t}\n\t\t});\n\t}\n\trender() {\n\t\tconsole.log(this.props.currentUser);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header\n\t\t\t\t\tcurrentUser={this.state.currentUser}\n\t\t\t\t\thandleSignOut={this.handleSignOut}\n\t\t\t\t/>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={HomePage} />\n\t\t\t\t\t<Route path='/shop' component={ShopPage} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/signIn'\n\t\t\t\t\t\trender={() =>\n\t\t\t\t\t\t\tthis.state.currentUser ? <Redirect to='/' /> : <SignIn />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/register'\n\t\t\t\t\t\trender={() =>\n\t\t\t\t\t\t\tthis.state.currentUser ? <Redirect to='/' /> : <Register />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path='/checkOut' component={CheckOut} />\n\t\t\t\t</Switch>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tcurrentUser: state.user.currentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tgetCurrentUser: (currentUser) => dispatch(getCurrentUser(currentUser)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}