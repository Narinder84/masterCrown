{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\master\\\\crown-master\\\\src\\\\App.jsx\";\n\n/** @format */\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCurrentUser, getUserSinghOut } from '../src/redux/user/user.action';\nimport { auth, createDataBaseForUser, createDataBase } from '././firabase/fireBaseUtils';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/directory/HomePage.page';\nimport ShopPage from './pages/shopPage/shopPage';\nimport SignIn from './pages/signIn/signIn';\nimport './App.css';\nimport Register from './pages/register/register';\nimport CheckOut from './pages/checkOut/checkOut'; // import SHOP_DATA from '../src/redux/collections/shop.data.js';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSignOut = () => {\n      // auth.signOut().then(() => this.setState({ currentUser: '' }));\n      auth.signOut().then(() => this.props.getUserSinghOut());\n    };\n\n    this.subscribeGoogleAuth = null;\n  }\n\n  componentDidMount() {\n    this.subscribeGoogleAuth = auth.onAuthStateChanged(async user => {\n      console.log(user);\n\n      if (user) {\n        console.log('mount');\n        const userRef = await createDataBaseForUser(user);\n        userRef.onSnapshot(snapShot => {\n          const user = {\n            id: snapShot.id,\n            ...snapShot.data()\n          };\n          this.props.getCurrentUser(user);\n        });\n      }\n\n      this.props.getCurrentUser(user);\n    }); // this function for one time use , to create fresh data base in fire store\n    // createDataBase(SHOP_DATA);\n  }\n\n  componentWillUnmount() {\n    this.subscribeGoogleAuth = null;\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      currentUser: currentUser,\n      handleSignOut: this.handleSignOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signIn\",\n      render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 36\n        }\n      }) : /*#__PURE__*/React.createElement(SignIn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 58\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 36\n        }\n      }) : /*#__PURE__*/React.createElement(Register, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 58\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/checkOut\",\n      component: CheckOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentUser: currentUser => dispatch(getCurrentUser(currentUser)),\n  getUserSinghOut: () => dispatch(getUserSinghOut())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/admin/Desktop/master/crown-master/src/App.jsx"],"names":["React","Redirect","Route","Switch","connect","getCurrentUser","getUserSinghOut","auth","createDataBaseForUser","createDataBase","Header","HomePage","ShopPage","SignIn","Register","CheckOut","App","Component","handleSignOut","signOut","then","props","subscribeGoogleAuth","componentDidMount","onAuthStateChanged","user","console","log","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { getCurrentUser, getUserSinghOut } from '../src/redux/user/user.action';\nimport {\n\tauth,\n\tcreateDataBaseForUser,\n\tcreateDataBase,\n} from '././firabase/fireBaseUtils';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/directory/HomePage.page';\nimport ShopPage from './pages/shopPage/shopPage';\nimport SignIn from './pages/signIn/signIn';\nimport './App.css';\nimport Register from './pages/register/register';\nimport CheckOut from './pages/checkOut/checkOut';\n\n// import SHOP_DATA from '../src/redux/collections/shop.data.js';\n\nclass App extends React.Component {\n\thandleSignOut = () => {\n\t\t// auth.signOut().then(() => this.setState({ currentUser: '' }));\n\t\tauth.signOut().then(() => this.props.getUserSinghOut());\n\t};\n\n\tsubscribeGoogleAuth = null;\n\n\tcomponentDidMount() {\n\t\tthis.subscribeGoogleAuth = auth.onAuthStateChanged(async (user) => {\n\t\t\tconsole.log(user);\n\t\t\tif (user) {\n\t\t\t\tconsole.log('mount');\n\t\t\t\tconst userRef = await createDataBaseForUser(user);\n\n\t\t\t\tuserRef.onSnapshot((snapShot) => {\n\t\t\t\t\tconst user = {\n\t\t\t\t\t\tid: snapShot.id,\n\t\t\t\t\t\t...snapShot.data(),\n\t\t\t\t\t};\n\t\t\t\t\tthis.props.getCurrentUser(user);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.props.getCurrentUser(user);\n\t\t});\n\t\t// this function for one time use , to create fresh data base in fire store\n\t\t// createDataBase(SHOP_DATA);\n\t}\n\tcomponentWillUnmount() {\n\t\tthis.subscribeGoogleAuth = null;\n\t}\n\n\trender() {\n\t\tconst { currentUser } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header currentUser={currentUser} handleSignOut={this.handleSignOut} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={HomePage} />\n\t\t\t\t\t<Route path='/shop' component={ShopPage} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/signIn'\n\t\t\t\t\t\trender={() => (currentUser ? <Redirect to='/' /> : <SignIn />)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/register'\n\t\t\t\t\t\trender={() => (currentUser ? <Redirect to='/' /> : <Register />)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path='/checkOut' component={CheckOut} />\n\t\t\t\t</Switch>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tcurrentUser: state.user.currentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tgetCurrentUser: (currentUser) => dispatch(getCurrentUser(currentUser)),\n\tgetUserSinghOut: () => dispatch(getUserSinghOut()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}